---
- name: install dependent packages for s3fs-fuse
  package:
    name="{{ item }}"
    state="present"
    update_cache=yes
  with_items: "{{ s3fs_dependencies }}"

# Download and Setup S3FS
- name: Download s3fs sources
  get_url: url=https://github.com/s3fs-fuse/s3fs-fuse/archive/v{{ s3fs.version }}.tar.gz dest=/tmp/s3fs-fuse-{{ s3fs.version }}.tar.gz
- name: extract tar.gz of s3fs-fuse
  unarchive:
    src: /tmp/s3fs-fuse-{{ s3fs.version }}.tar.gz
    remote_src: yes
    dest: /tmp
    creates: s3fs-fuse-{{ s3fs.version }}

- name: building and installing s3fs-fuse v{{ s3fs.version }}
  command: "{{ item }} chdir=/tmp/s3fs-fuse-{{ s3fs.version }}"
  with_items:
     - ./autogen.sh
     - ./configure --prefix={{ s3fs.install_prefix | default('/usr') }}
     - make
     - make install

- name: Allow non-root users to specify the allow_other or allow_root mount options
  become: true
  lineinfile:
    dest: "/etc/fuse.conf"
    regexp: "^#user_allow_other$"
    line: "user_allow_other"
    state: present
    backrefs: yes

- name: Make sure the access keys of buckets are present
  become: true
  template:
    src: passwd-s3fs.j2
    dest: "{{ s3fs.passwd_file }}"
    mode: 0640
    owner: "{{ ansible_user_id }}"
  with_items: "{{ s3fs.buckets }}"
  when: item.passwd_file is defined
  notify: restart s3fs

# Mount S3 Bucket to MountPoints
- name: mount folder to s3 bucket
  command: >
    s3fs
    {% for option in item.options %}
    -o {{ option }}
    {% endfor %}
    {{ item.bucket }} {{ item.mountpoints }}
  with_items: "{{ s3fs.buckets }}"